<?php

class Emoji_Parser {
	static public function shared_instance() {
		static $instance;
		
		return $instance ? $instance : $instance = new self();
	}
	
	static protected function _unicode_ord($u) {
		$c = unpack("N", mb_convert_encoding($u, 'UCS-4BE', 'UTF-8'));
		return $c[1];
	}
	
	protected $_format;
	
	protected $_use_native_implementation = false;
	
	protected $_table = array(
	0xE001,0xE002,0xE003,0xE004,0xE005,0xE006,0xE007,0xE008,0xE009,0xE00A,0xE00B,
	0xE00C,0xE00D,0xE00E,0xE00F,0xE010,0xE011,0xE012,0xE013,0xE014,0xE015,0xE016,
	0xE017,0xE018,0xE019,0xE01A,0xE01B,0xE01C,0xE01D,0xE01E,0xE01F,0xE020,0xE021,
	0xE022,0xE023,0xE024,0xE025,0xE026,0xE027,0xE028,0xE029,0xE02A,0xE02B,0xE02C,
	0xE02D,0xE02E,0xE02F,0xE030,0xE031,0xE032,0xE033,0xE034,0xE035,0xE036,0xE037,
	0xE038,0xE039,0xE03A,0xE03B,0xE03C,0xE03D,0xE03E,0xE03F,0xE040,0xE041,0xE042,
	0xE043,0xE044,0xE045,0xE046,0xE047,0xE048,0xE049,0xE04A,0xE04B,0xE04C,0xE04D,
	0xE04E,0xE04F,0xE050,0xE051,0xE052,0xE053,0xE054,0xE055,0xE056,0xE057,0xE058,
	0xE059,0xE05A,0xE101,0xE102,0xE103,0xE104,0xE105,0xE106,0xE107,0xE108,0xE109,
	0xE10A,0xE10B,0xE10C,0xE10D,0xE10E,0xE10F,0xE110,0xE111,0xE112,0xE113,0xE114,
	0xE115,0xE116,0xE117,0xE118,0xE119,0xE11A,0xE11B,0xE11C,0xE11D,0xE11E,0xE11F,
	0xE120,0xE121,0xE122,0xE123,0xE124,0xE125,0xE126,0xE127,0xE128,0xE129,0xE12A,
	0xE12B,0xE12C,0xE12D,0xE12E,0xE12F,0xE130,0xE131,0xE132,0xE133,0xE134,0xE135,
	0xE136,0xE137,0xE138,0xE139,0xE13A,0xE13B,0xE13C,0xE13D,0xE13E,0xE13F,0xE140,
	0xE141,0xE142,0xE143,0xE144,0xE145,0xE146,0xE147,0xE148,0xE149,0xE14A,0xE14B,
	0xE14C,0xE14D,0xE14E,0xE14F,0xE150,0xE151,0xE152,0xE153,0xE154,0xE155,0xE156,
	0xE157,0xE158,0xE159,0xE15A,0xE201,0xE202,0xE203,0xE204,0xE205,0xE206,0xE207,
	0xE208,0xE209,0xE20A,0xE20B,0xE20C,0xE20D,0xE20E,0xE20F,0xE210,0xE211,0xE212,
	0xE213,0xE214,0xE215,0xE216,0xE217,0xE218,0xE219,0xE21A,0xE21B,0xE21C,0xE21D,
	0xE21E,0xE21F,0xE220,0xE221,0xE222,0xE223,0xE224,0xE225,0xE226,0xE227,0xE228,
	0xE229,0xE22A,0xE22B,0xE22C,0xE22D,0xE22E,0xE22F,0xE230,0xE231,0xE232,0xE233,
	0xE234,0xE235,0xE236,0xE237,0xE238,0xE239,0xE23A,0xE23B,0xE23C,0xE23D,0xE23E,
	0xE23F,0xE240,0xE241,0xE242,0xE243,0xE244,0xE245,0xE246,0xE247,0xE248,0xE249,
	0xE24A,0xE24B,0xE24C,0xE24D,0xE24E,0xE24F,0xE250,0xE251,0xE252,0xE253,0xE301,
	0xE302,0xE303,0xE304,0xE305,0xE306,0xE307,0xE308,0xE309,0xE30A,0xE30B,0xE30C,
	0xE30D,0xE30E,0xE30F,0xE310,0xE311,0xE312,0xE313,0xE314,0xE315,0xE316,0xE317,
	0xE318,0xE319,0xE31A,0xE31B,0xE31C,0xE31D,0xE31E,0xE31F,0xE320,0xE321,0xE322,
	0xE323,0xE324,0xE325,0xE326,0xE327,0xE328,0xE329,0xE32A,0xE32B,0xE32C,0xE32D,
	0xE32E,0xE32F,0xE330,0xE331,0xE332,0xE333,0xE334,0xE335,0xE336,0xE337,0xE338,
	0xE339,0xE33A,0xE33B,0xE33C,0xE33D,0xE33E,0xE33F,0xE340,0xE341,0xE342,0xE343,
	0xE344,0xE345,0xE346,0xE347,0xE348,0xE349,0xE34A,0xE34B,0xE34C,0xE34D,0xE401,
	0xE402,0xE403,0xE404,0xE405,0xE406,0xE407,0xE408,0xE409,0xE40A,0xE40B,0xE40C,
	0xE40D,0xE40E,0xE40F,0xE410,0xE411,0xE412,0xE413,0xE414,0xE415,0xE416,0xE417,
	0xE418,0xE419,0xE41A,0xE41B,0xE41C,0xE41D,0xE41E,0xE41F,0xE420,0xE421,0xE422,
	0xE423,0xE424,0xE425,0xE426,0xE427,0xE428,0xE429,0xE42A,0xE42B,0xE42C,0xE42D,
	0xE42E,0xE42F,0xE430,0xE431,0xE432,0xE433,0xE434,0xE435,0xE436,0xE437,0xE438,
	0xE439,0xE43A,0xE43B,0xE43C,0xE43D,0xE43E,0xE43F,0xE440,0xE441,0xE442,0xE443,
	0xE444,0xE445,0xE446,0xE447,0xE448,0xE449,0xE44A,0xE44B,0xE44C,0xE501,0xE502,
	0xE503,0xE504,0xE505,0xE506,0xE507,0xE508,0xE509,0xE50A,0xE50B,0xE50C,0xE50D,
	0xE50E,0xE50F,0xE510,0xE511,0xE512,0xE513,0xE514,0xE515,0xE516,0xE517,0xE518,
	0xE519,0xE51A,0xE51B,0xE51C,0xE51D,0xE51E,0xE51F,0xE520,0xE521,0xE522,0xE523,
	0xE524,0xE525,0xE526,0xE527,0xE528,0xE529,0xE52A,0xE52B,0xE52C,0xE52D,0xE52E,
	0xE52F,0xE530,0xE531,0xE532,0xE533,0xE534,0xE535,0xE536,0xE537);
	
	public function __construct() {
		$this->_table = array_flip($this->_table);
	}
	
	public function disable() {
		$this->_use_native_implementation = true;
	}
	
	public function set_format($format) {
		$this->_format = $format;
	}
	
	public function lookup($unicode_char) {
		return $this->_table[self::_unicode_ord($unicode_char)];
	}
	
	public function parse($text) {
		if($this->_use_native_implementation) return $text;
		
		for($i = 0, $length = strlen($text); $i < $length; $i++) {
			if(ord($text[$i]) == 238 && ord($text[$i + 1]) >= 128) {

				$replacement = sprintf($this->_format, $this->lookup(substr($text, $i, 3)));

				$text = substr($text, 0, $i) . $replacement . substr($text, $i + 3);
				$i = $i + strlen($replacement) - 3;
				$length = $length + strlen($replacement) - 3;
			}
		}
		
		return $text;
	}
}

class List_Service_Item_Emoji implements List_Service_Item_Decorator {
	
	protected $_parser;
	
	public function __construct(Emoji_Parser $parser) {
		$this->_parser = $parser;
	}
	
	public function decorate(List_Service_Item $item, $html) {
		return $this->_parser->parse($html);
	}
}
